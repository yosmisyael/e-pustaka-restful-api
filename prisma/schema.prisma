// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum roles {
  ADMINISTRATOR
  LECTURER
  STUDENT
}

model User {
  id           String         @id
  name         String
  email        String         @unique
  password     String
  role         roles
  isVerified   Boolean?       @map("is_verified")
  token        String?        @db.VarChar(500)
  UsersOnBooks UsersOnBooks[]

  @@map("users")
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  books Book[]

  @@map("categories")
}

model Author {
  id    Int    @id @default(autoincrement())
  name  String @unique
  books Book[]

  @@map("authors")
}

model Book {
  isbn        String  @id
  title       String
  description String @db.Text()
  year        Int
  authorId    Int
  cover       String?
  publisher   String?
  isAvailable Boolean @default(true) @map("is_available")
  pages       Int
  language    String
  categoryId  Int

  author       Author         @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  category     Category       @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  UsersOnBooks UsersOnBooks[]

  @@map("books")
}

model UsersOnBooks {
  id           Int       @id @default(autoincrement())
  userId       String    @map("user_id")
  user         User      @relation(references: [id], fields: [userId], onDelete: Cascade, onUpdate: Cascade)
  bookId       String    @map("book_id")
  book         Book      @relation(references: [isbn], fields: [bookId], onDelete: Cascade, onUpdate: Cascade)
  borrowDate   DateTime
  returnDate   DateTime
  returnedDate DateTime? @map("actual_return_date")

  @@map("borrowing")
}
